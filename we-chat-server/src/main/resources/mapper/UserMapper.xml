<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.chat.server.mapper.UserMapper">

    <insert id="insertUser" parameterType="cn.chat.server.pojo.entity.User">
        INSERT INTO `user`(userId,userNickName,userHead,userPassword,createTime,updateTime)
        value ( #{userId} , #{nickName}, #{userHead},
        #{password}, now(),now())
    </insert>

    <update id="updateUser" parameterType="cn.chat.server.pojo.entity.User">
        update `user` set
        userNickName = #{nickName},
        userPassword = #{password},
        updateTime = now()
        where `userId` = #{userId}
    </update>

    <select id="queryUserPassword" parameterType="java.lang.String" resultType="java.lang.String">
        SELECT userPassword FROM `user` where userId = #{userId}
    </select>

    <select id="queryUserById" parameterType="java.lang.String" resultType="cn.chat.server.pojo.entity.User">
        select userId, userNickName, userHead from user where userId = #{userId}
    </select>

    <select id="queryFuzzyUserList" parameterType="java.lang.String" resultType="cn.chat.server.pojo.entity.User">
        select userId, userNickName, userHead
        from user where userId != #{userId} and (userId = #{searchKey} or userNickName like "%"#{searchKey}"%")
        order by id desc
        limit 10
    </select>

    <select id="queryChannelUserCount" parameterType="cn.chat.server.pojo.model.inet.ChannelUserReq" resultType="java.lang.Long">
        select count(id)
        from user
        <where>
            <if test="null != userId">
                and userId = #{channelUserReq.userId}
            </if>
            <if test="null != userNickName">
                and userNickName like "%"#{channelUserReq.userNickName}"%"
            </if>
        </where>
    </select>

    <select id="queryChannelUserList" parameterType="cn.chat.server.pojo.model.inet.ChannelUserReq" resultType="cn.chat.server.pojo.entity.User">
        select userId, userNickName, userHead
        from user
        <where>
            <if test="null != userId">
                and userId = #{channelUserReq.userId}
            </if>
            <if test="null != userNickName">
                and userNickName like "%"#{channelUserReq.userNickName}"%"
            </if>
        </where>
        order by id desc
        limit #{channelUserReq.pageStart},#{channelUserReq.pageEnd}
    </select>

</mapper>
